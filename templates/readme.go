package templates

import "strings"

var (
	// ReadMe README.md template.
	ReadMe = `# {{.project_name}}

[![Actions Status](https://{{.module_name}}/workflows/Go/badge.svg)](https://{{.module_name}}/actions)
[![GoDoc](https://godoc.org/{{.module_name}}?status.svg)](https://pkg.go.dev/mod/{{.module_name}})
[![GoReportCard](https://goreportcard.com/badge/{{.module_name}})](https://goreportcard.com/report/{{.module_name}})

{{.project_name}} is a production ready project template for microservices using gRPC - generated by [microgen](https://github.com/pthethanh/microgen)

## Getting Started

These instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.

### Prerequisites

- Go {{.version_go}}
- Protocol Buffer {{.version_protobuf}}

Install Protocol Buffer

BACKTIPSshell
make install_protobuf
BACKTIPS

### Installing

Clone the code.
BACKTIPSshell
git clone https://{{.module_name}}
BACKTIPS

Gen gRPC, gRPC Gateway, Swagger and verify the code.

BACKTIPSshell
make all
BACKTIPS

Start the service.

BACKTIPSshell
go run main.go
BACKTIPS

Verify the APIs

BACKTIPSshell
curl http://localhost:8000/internal/readiness
curl http://localhost:8000/internal/liveness
curl http://localhost:8000/internal/metrics
BACKTIPS

## Running the tests

Run the test by simply execute: BACKTIPmakeBACKTIP

## Coding style

The code convention should follow https://github.com/golovers/effective-go

All developers are required to run BACKTIPmakeBACKTIP before pushing the code to remote git.

## Deployment

Build Docker Image

BACKTIPSshell
make docker_build
BACKTIPS

Run With Docker Image

BACKTIPSshell
make docker
BACKTIPS

Run With Docker Compose

BACKTIPSshell
make compose
BACKTIPS
{{if .heroku}}
Deploy to Heroku

BACKTIPSshell
make heroku
BACKTIPS
{{end}}
## Built With

- [micro](https://github.com/pthethanh/micro)- Microservices tool kit.
- [microgen](https://github.com/pthethanh/microgen) - Production ready project template for microservices.

## Contributing

TBU

## Versioning

We use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://{{.module_name}}/tags).

## Authors

**Thanh Pham** - *Initial work* - [Thanh Pham Github](https://github.com/pthethanh)

See also the list of [contributors](https://{{.module_name}}/contributors) who participated in this project.

## License

This project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details

## Acknowledgments

TBU
	
`
)

func init() {
	ReadMe = strings.ReplaceAll(ReadMe, "BACKTIPS", "```")
	ReadMe = strings.ReplaceAll(ReadMe, "BACKTIP", "`")
}
